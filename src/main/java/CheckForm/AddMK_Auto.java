package CheckForm;

import javax.swing.*;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;

public class AddMK_Auto {

    private Map<String, JTextField> textFieldMap = new HashMap<>();

    public void initTextFieldMap(Object formObject) {
        Field[] fields = formObject.getClass().getDeclaredFields();
        for (Field field : fields) {
            if (field.getType() == JTextField.class) {
                try {
                    field.setAccessible(true);
                    JTextField textField = (JTextField) field.get(formObject);
                    textFieldMap.put(field.getName(), textField);
                } catch (IllegalAccessException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public void setTextFieldValues() {
        textFieldMap.forEach((name, textField) -> {
            if (name.contains("MK")) {
                String autoGeneratedPassword = generateAutoPassword();
                textField.setText(autoGeneratedPassword);
                textField.setEnabled(false);
            }
        });
    }

    public String generateAutoPassword() {
        String upperCaseLetters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String specialCharacters = "@#$%^&_";
        String digits = "0123456789";
        String allCharacters = upperCaseLetters + specialCharacters + digits;

        StringBuilder password = new StringBuilder();
        Random random = new Random();

        // Ensure at least one uppercase letter, one special character, and one digit
        password.append(upperCaseLetters.charAt(random.nextInt(upperCaseLetters.length())));
        password.append(specialCharacters.charAt(random.nextInt(specialCharacters.length())));
        password.append(digits.charAt(random.nextInt(digits.length())));

        // Fill the rest of the password to ensure length > 6
        int remainingLength = random.nextInt(3) + 4; // Ensures length is at least 7
        for (int i = 0; i < remainingLength; i++) {
            password.append(allCharacters.charAt(random.nextInt(allCharacters.length())));
        }

        return password.toString();
    }

}
